# Tästä on tarkoitus tehdä noppasimulaattori Viraston mekaniikoille. 
# Käskyt: roll(dice, penalty) heittää dice verran noppia, jossa penalty verran sakkonoppia. what_hand(hand) tunnistaa parhaan kombinaation kädestä hand. simulate(n,dice,penalty) simuloi n kertaa heittoja dice nopalla ja penalty sakkonopalla.

remove(list=ls())

roll = function(dice=6, penalty=0){
  pen <- 0
  result <- sample(1:6,dice,replace=T)
  pen <- sample(1:6,penalty,replace=T)
  result <- (result[!result %in% pen])
  return(result)
}

what_hand = function(hand){
  highest <- 0
  second <- 0
  straight <- 0
  die <- 0
  if (all(c(2,3,4,5,6) %in% hand)) straight <- 1
  if (all(c(1,2,3,4,5) %in% hand)) straight <- 1
  if (length(hand)==0) return("No_Dice")
  for (i in c(6:1)){
    if (sum(hand == i) > highest){
      die <- i
      highest <- sum(hand == i)
      }
  }
  hand[hand==die] <- 0
  for (i in c(6:1)){
    if (sum(hand == i) > second){
      second <- sum(hand == i)
    }
  }
 if (highest > 4) return("Vitoset")
 if (highest == 4) return("Neloset")
 if (highest > 2 & second > 1) return ("Full_House")
 if (straight == 1) return ("Suora")
 if (highest == 3) return("Kolmoset")
 if (highest == 2 & second == 2) return ("Kaksi_Paria")
 if (highest == 2) return("Pari")
 if (highest == 1) return("Ace")
}

simulate = function(n=10000, mindice=1, maxdice=20, penalty=0) 
{
  hands = c("Vitoset", "Neloset", "Full_House", "Suora", "Kolmoset", "Kaksi_Paria", "Pari", "Ace", "No_Dice")
  
  res = matrix(0,length(hands),ncol=maxdice-mindice+1)
  rownames(res) = hands
  colnames(res) = c(mindice:maxdice)
  pb = txtProgressBar(min = 0, max = maxdice, style = 3)
  for(j in mindice:maxdice){
    for(i in 1:n) {
      hand = what_hand(roll(j, penalty))
      
      res[hand,j] = res[hand,j]+1
    }
    setTxtProgressBar(pb, j)
    
  }
  res<-round(res/n,2)
  return(write.table(res))
}
