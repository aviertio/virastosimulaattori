# Tästä on tarkoitus tehdä noppasimulaattori Viraston mekaniikoille. 
# Käskyt: 
# roll(dice, penalty) heittää dice verran noppia, jossa penalty verran sakkonoppia. 
# what_hand(hand) tunnistaa parhaan kombinaation kädestä hand. 
# simulate(n,dice,penalty) simuloi n kertaa heittoja dice nopalla ja penalty sakkonopalla. onlybest=T valitsee vain parhaan käden, =F näyttää kaikki mahdolliset kädet.
# battle(n,dice1,pendice1,dice2,pendice2) simuloi vastakkaisia heittoja n kertaa. Pelaajilla on dice noppaa ja pendice sakkonoppaa. 

remove(list=ls())

roll = function(dice=6, penalty=0){
  pen <- 0
  result <- sample(1:6,dice,replace=T)
  pen <- sample(1:6,penalty,replace=T)
  result <- (result[!result %in% pen])
  return(result)
}

what_hand = function(hand,battle=F){
  highest <- 0
  second <- 0
  straight <- 0
  die <- 0
  combos <- vector()
  if (all(c(2,3,4,5,6) %in% hand)) straight <- 1
  if (all(c(1,2,3,4,5) %in% hand)) straight <- 1
  if (length(hand)==0) combos <- c(combos,"No_Dice")
  for (i in c(6:1)){
    if (sum(hand == i) > highest){
      die <- i
      highest <- sum(hand == i)
    }
  }
  hand[hand==die] <- 0
  for (i in c(6:1)){
    if (sum(hand == i) > second){
      second <- sum(hand == i)
    }
  }
  if (highest > 4) combos <- c(combos,"Vitoset")
  if (highest > 3) combos <- c(combos,"Neloset")
  if (highest > 2 & second > 1) combos <- c(combos,"Full_House")
  if (straight == 1) combos <- c(combos,"Suora")
  if (highest > 2) combos <- c(combos,"Kolmoset")
  if (highest > 1 & second > 1) combos <- c(combos,"Kaksi_Paria")
  if (highest > 1) combos <- c(combos,"Pari")
  if (length(hand) > 0) combos <- c(combos,"Ace")
  if (battle) combos <- c(die, combos)
  return(combos)
}


simulate = function(n=10000, mindice=1, maxdice=20, penalty=0, onlybest=T) 
{
  
  hands = c("Vitoset", "Neloset", "Full_House", "Suora", "Kolmoset", "Kaksi_Paria", "Pari", "Ace", "No_Dice")
  res = matrix(0,length(hands),ncol=maxdice-mindice+1)
  rownames(res) = hands
  colnames(res) = c(mindice:maxdice)
  pb = txtProgressBar(min = 0, max = maxdice, style = 3)
  for(j in mindice:maxdice){
    for(i in 1:n) {
      hand = what_hand(roll(j, penalty))
      if(onlybest) hand <- hand[1]
      res[hand,j] = res[hand,j]+1
    }
    setTxtProgressBar(pb, j)
    
  }
  res<-round(res/n,2)
  return(write.table(res))
}

battle = function(n=10000, dice1=5, pendice1=0, dice2=5, pendice2=0)
{
  hands = c("Vitoset", "Neloset", "Full_House", "Suora", "Kolmoset", "Kaksi_Paria", "Pari", "Ace", "No_Dice")
  wins <- 0
  ties <- 0
  pb = txtProgressBar(min = 0, max = n, style = 3)
  for(i in 1:n){
    player1 <- what_hand(roll(dice1,pendice1),battle=T)
    player2 <- what_hand(roll(dice2,pendice2),battle=T)
    if(match(player1[2],hands) < match(player2[2],hands)) wins <- wins+1
    if((match(player1[2],hands) == match(player2[2],hands))&(player1[1]>player2[1])) wins <- wins+1
    if((match(player1[2],hands) == match(player2[2],hands))&(player1[1]==player2[1])) ties <- ties+1
    setTxtProgressBar(pb, i)
    
  }
  total <- c(wins/n, (n-wins-ties)/n,ties/n)
  names(total) = c("Pelaaja 1 voittaa","Pelaaja 2 voittaa","Tasapeli (vain yksi tiebreak)")
  return(total)
}
